#.pushDivert(-1)

#.define( `#id', `Nmp.Core')
#.define( `#title', #id)
#.define( `#author', `Joe McLain')
#.define( `#owner', #author)
#.define( `#tags', `macro processor NMP Razor templates code generation Visual Studio 2012 T4')

#.define( `#projUrl', `https://github.com/jmclain/Nmp')
#.define( `#licenseUrl', `https://github.com/jmclain/Nmp/blob/master/license.txt')

(#defmacro `#description')
	.tbwrap.
    .trim.
	.wscompress.
The .NET Macro Processor (NMP) is a general purpose text macro processor. This package contains the core assemblies required to host Nmp in a .Net project.
(#endmacro)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;

(#defmacro `_nuspec')
<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>#id</id>
    <version>#version</version>
    <title>#title</title>
    <authors>#author</authors>
    <owners>#owner</owners>
    <licenseUrl>#licenseUrl</licenseUrl>
    <projectUrl>#projUrl</projectUrl>
;;    <iconUrl>http://www.netmacros.net/content/icons/nmp.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>
			#description
		</description>
    <summary />
    <language>en-US</language>
    <tags>#tags</tags>
  </metadata>
</package>
(#endmacro)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(#defmacro `genPublishBtm')
@echo off
echo ***
echo uploading "#id`'.`'#version`'.nupkg"
echo ***

nuget Push #id`'.`'#version`'.nupkg

pause Done ...
exit 0

(#endmacro)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; get version from one of the dll's that is not loaded by our
;; runtime instance - this is important because the version of NMP
;; processing this file may NOT be the version that we're building
;; the nupkg for
;;
;; SO, DO NOT PROCESS THIS FILE WITH THE Visual Studio Custom Tool !!
;;

;; #define( `#Assembly', `@#object.newStatic(System.Reflection.Assembly)')
;; ;;#define( `taskDll', `@#Assembly.LoadFrom(#directory\tools\NmpMSBuildTask.dll)')
;; ;;#define( `taskDll', `@#Assembly.LoadFrom(#Directory.GetCurrentDirectory()\lib\Net45\Nmp.dll)')
;; ;;#define( `taskDll', `@#Assembly.LoadFrom(#.currentDirectory\..\..\Current\Nmp\Debug\Nmp.dll)')
;; #define( `taskDll', `@#Assembly.LoadFrom(#.currentDirectory\..\Nmp\Debug\Nmp.dll)')
;; 
;; #define( `_version', taskDll.GetName().Version.ToString().MatchEx(`^([0-9]*?\.[0-9]*?\.[0-9]*)\.'))

(#if #is.Defined(`#lib'))
	#define( `#Assembly', `@#object.newStatic(System.Reflection.Assembly)')
	#define( `taskDll', `@#Assembly.LoadFrom(#.currentDirectory\#lib)')
	#define( `#version', taskDll.GetName().Version.ToString().MatchEx(`^([0-9]*?\.[0-9]*?\.[0-9]*)\.'))
(#endif)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; and finally generate the contents of the .nuspec file (which is our output)
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#popDivert()-
_nuspec()

genPublishBtm()@[divert]
#.saveDivert( `upload.btm', `genPublishBtm', true)

;;#Environment.SetEnvironmentVariable( `nmp_version', #version, (EnvironmentVariableTarget )1)




