#.pushDivert(-1)
#.nofile()
#.popDivert()

#.define( `macro_processor', `Nmp')

#.define( `a', `ma')
#.define( `b', `cro')
#.define( `c', `_')
#.define( `d', `pro')
#.define( `e', `ces')
#.define( `f', `sor')


(#defmacro `_Test')
	.trim.

-	macro_processor
	
-	ma`'cro`'_pro`'ces`'sor	

-	(##&ma`'cro`'_pro`'ces`'sor##)

-	a`'b`'c`'d`'e`'f

-	(##&a`'b`'c`'d`'e`'f##)

-	"(##& a`'b`'c`'d`'e`'f`'.Length ##)"

(#endmacro)

(#if #.not(isTest) )

	;;
	;; the test code that runs this macro text defines a macro named
	;; `isTest', so this will not run when the unit test is running
	;;
	
	_Test@[divert]
	#.saveDivert( `Success\\'#Path.GetFileName(#.currentFile)`'.result, `_Test', true)


(#endif)


